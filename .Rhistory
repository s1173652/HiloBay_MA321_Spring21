hilo <- hbb_wku_h_xts
# read data
#test<-read.csv("drop_na_test.csv")
wku_ts <- read.csv("wailuku_2010_master.csv") #15 min WKU with some lower frequency at storms
hbb_ts <- read.csv("MASTER_DATASHEET_HBB_text_new.csv") #15 minute data, 2010 - 2016
hbb_ts$saltppt <-as.numeric(hbb_ts$saltppt) #not sure why but saltppt comes through as character, so i convert to numeric here
#convert date column to R dates
hbb_ts$date<-parse_date_time(hbb_ts$date, orders = "mdyHM")
wku_ts$date<-parse_date_time(wku_ts$date, orders = "mdyHM")
#change the frequency of hbb_ts to hourly, save in new data frames. but currently this only averages the time column?!??!
hbb_ts_h<-timeAverage(hbb_ts, avg.time = "hour", statistic = "mean")
wku_ts_h<-timeAverage(wku_ts, avg.time = "hour", statistic = "mean")
#merge hourly time series on a common time index. Since wku is longer time series, right join hbb to wku?
#first make xts objects from hourly data
hbb_h_xts<-xts(hbb_ts_h, order.by = hbb_ts_h$date) #this generates an xts object using new column 'date' date as index
wku_h_xts<-xts(wku_ts_h, order.by = wku_ts_h$date) #this generates an xts object using new column 'date' date as index
hbb_wku_h_xts<-merge(wku_h_xts, hbb_h_xts, join = "left", fill =NA)
hilo <- hbb_wku_h_xts
hbb_wku_h_xts<-merge(wku_h_xts, hbb_h_xts, join = "left", fill =NA)
#merge hourly time series on a common time index. Since wku is longer time series, right join hbb to wku?
#first make xts objects from hourly data
hbb_h_xts<-xts(hbb_ts_h, order.by = hbb_ts_h$date) #this generates an xts object using new column 'date' date as index
# Libraries
library(ggplot2)
library(dplyr)
library(scales)
library(Amelia)
library(lubridate)
library(xts)
library(openair)
library(tidyr)
library(gganimate)
#merge hourly time series on a common time index. Since wku is longer time series, right join hbb to wku?
#first make xts objects from hourly data
hbb_h_xts<-xts(hbb_ts_h, order.by = hbb_ts_h$date) #this generates an xts object using new column 'date' date as index
#change the frequency of hbb_ts to hourly, save in new data frames. but currently this only averages the time column?!??!
hbb_ts_h<-timeAverage(hbb_ts, avg.time = "hour", statistic = "mean")
wku_ts_h<-timeAverage(wku_ts, avg.time = "hour", statistic = "mean")
wku_h_xts<-xts(wku_ts_h, order.by = wku_ts_h$date) #this generates an xts object using new column 'date' date as index
#merge hourly time series on a common time index. Since wku is longer time series, right join hbb to wku?
#first make xts objects from hourly data
hbb_h_xts<-xts(hbb_ts_h, order.by = hbb_ts_h$date) #this generates an xts object using new column 'date' date as index
hbb_wku_h_xts<-merge(wku_h_xts, hbb_h_xts, join = "left", fill =NA)
hilo <- hbb_wku_h_xts
hilo <- hilo[529:54816]
which(hilo$date=="2010-10-23 00:00:00")
which(hilo$date=="2016-12-31 23:00:00")
hilo <- hbb_wku_h_xts
hilo <- hilo[529:54816]
which(hilo$date=="2010-10-23 00:00:00")
which(hilo$date=="2016-12-31 23:00:00")
hilo <- hbb_wku_h_xts
hilo <- hilo[which(hilo$date=="2010-10-23 00:00:00"):which(hilo$date=="2010-10-23 00:00:00")]
hilo <- hbb_wku_h_xts
hilo <- hilo[529:54816]
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
View(hilo)
hilo <- hbb_wku_h_xts
hilo <- hilo[529:54816]
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
View(hilo)
# Libraries
library(ggplot2)
library(dplyr)
library(scales)
library(Amelia)
library(lubridate)
library(xts)
library(openair)
library(tidyr)
library(gganimate)
# read data
#test<-read.csv("drop_na_test.csv")
wku_ts <- read.csv("wailuku_2010_master.csv") #15 min WKU with some lower frequency at storms
hbb_ts <- read.csv("MASTER_DATASHEET_HBB_text_new.csv") #15 minute data, 2010 - 2016
hbb_ts$saltppt <-as.numeric(hbb_ts$saltppt) #not sure why but saltppt comes through as character, so i convert to numeric here
#convert date column to R dates
hbb_ts$date<-parse_date_time(hbb_ts$date, orders = "mdyHM")
wku_ts$date<-parse_date_time(wku_ts$date, orders = "mdyHM")
#change the frequency of hbb_ts to hourly, save in new data frames. but currently this only averages the time column?!??!
hbb_ts_h<-timeAverage(hbb_ts, avg.time = "hour", statistic = "mean")
wku_ts_h<-timeAverage(wku_ts, avg.time = "hour", statistic = "mean")
#merge hourly time series on a common time index. Since wku is longer time series, right join hbb to wku?
#first make xts objects from hourly data
hbb_h_xts<-xts(hbb_ts_h, order.by = hbb_ts_h$date) #this generates an xts object using new column 'date' date as index
wku_h_xts<-xts(wku_ts_h, order.by = wku_ts_h$date) #this generates an xts object using new column 'date' date as index
hbb_wku_h_xts<-merge(wku_h_xts, hbb_h_xts, join = "left", fill =NA)
ggplot(hbb_wku_h_xts, aes(x = Index, y = as.numeric(logcms))) +
geom_line()
hilo <- hbb_wku_h_xts
View(hilo)
View(hilo)
hilo <- hilo[529:54816]
hilo <- hilo[529:54816]
hilo <- hilo[529:54816,]
hilo <- as.data.frame(hilo)
hilo <- hbb_wku_h_xts
hilo <- as.data.frame(hilo)
View(hilo)
hilo <- hilo[529:54816,]
length(hilo[1,])
length(hilo[,1])
length(hilo[,1]) # we are left with
54816 - length(hilo[,1])
length(hilo[,1]) # we are left with 54288 lines of data
54816 - length(hilo[,1]) # we lost 528 values
ggplot(hilo,  aes(x = Index, y = as.numeric(logcms))) +
geom_line()
ggplot(hilo,  aes(x = Index, y = as.numeric(logcms))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
hilo <- hbb_wku_h_xts
hilo <- as.data.frame(hilo)
hilo <- hbb_wku_h_xts
hilo <- as.data.frame(hilo)
hilo <- hbb_wku_h_xts
hilo <- as.matrix(hilo)
hilo <- hilo[529:54816,]
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
length(hilo[,1]) # we are left with 54288 lines of data
54816 - length(hilo[,1]) # we lost 528 values
ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
# Libraries
library(ggplot2)
ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
hilo <- hbb_wku_h_xts
hilo <- as.matrix(hilo)
hilo <- hilo[529:54816,]
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
hilo <- data.frame(date=index(hilo), coredata(hilo))
hilo <- hbb_wku_h_xts
hilo <- data.frame(date=index(hilo), coredata(hilo))
library(xts)
hilo <- hbb_wku_h_xts
hilo <- data.frame(date=index(hilo), coredata(hilo))
hilo <- hilo[529:54816,]
hilo
length(hilo[,1]) # we are left with 54288 lines of data
54816 - length(hilo[,1]) # we lost 528 values
ggplot(hilo$date, hilo$logcms) + geom_line()
ggplot(hilo$date, as.numeric(hilo$logcms)) + geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
#geom_line()
ggplot(hilo$date, as.numeric(hilo$logcms)) + geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
hilo$date.2 <- NULL
hilo$date.1 <- NULL
hilo$BGARFU <- NULL
hilo$DOmgL <- NULL
hilo$Doper <- NULL
U
hilo$PAR1 <- NULL
hilo$pH <- NULL
hilo$NTU <- NULL
hilo$DOper10 <- NULL
colnames(hilo) <- c("Date", "cfs", "RiverFlow-cumec", "LogRiverFlow-cumec", "Chlorophyll-RFU", "Salinity-PPT", "Temp-C", "chlorophyll-calibrator", "Turbidity-NTU")
hilo
ggplot(hilo,  aes(x = date, y = as.numeric(Chlorophyll-RFU))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(Chlorophyll-RFU))) +
geom_line()
hilo <- hbb_wku_h_xts
hilo <- data.frame(date=index(hilo), coredata(hilo))
hilo <- hilo[529:54816,]
hilo
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
# removing columns that we are not using
hilo$date.2 <- NULL # another date column
hilo$date.1 <- NULL # another date column
hilo$BGARFU <- NULL # ?
hilo$DOmgL <- NULL # dissolved oxygen
hilo$Doper <- NULL # dissolved oxygen
hilo$PAR1 <- NULL # ?
hilo$pH <- NULL # pH
hilo$NTU <- NULL # a different measurement for turbitity
hilo$DOper10 <- NULL # dissolved oxygen
colnames(hilo) <- c("Date", "cfs", "RiverFlow-cumec", "LogRiverFlow-cumec", "Chlorophyll-RFU", "Salinity-PPT", "Temp-C", "chlorophyll-calibrator", "Turbidity-NTU")
hilo
ggplot(hilo,  aes(x = date, y = as.numeric(LogRiverFlow-cumec))) +
geom_line()
# removing columns that we are not using
hilo$date.2 <- NULL # another date column
hilo$date.1 <- NULL # another date column
hilo$BGARFU <- NULL # ?
hilo$DOmgL <- NULL # dissolved oxygen
hilo$Doper <- NULL # dissolved oxygen
hilo$PAR1 <- NULL # ?
hilo$pH <- NULL # pH
hilo$NTU <- NULL # a different measurement for turbitity
hilo$DOper10 <- NULL # dissolved oxygen
# colnames(hilo) <- c("Date", "cfs", "RiverFlow-cumec", "LogRiverFlow-cumec", "Chlorophyll-RFU", "Salinity-PPT", "Temp-C", "chlorophyll-calibrator", "Turbidity-NTU")
# does not work ???
hilo
hilo <- hbb_wku_h_xts
hilo <- data.frame(date=index(hilo), coredata(hilo))
hilo <- hilo[529:54816,]
hilo
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
# removing columns that we are not using
hilo$date.2 <- NULL # another date column
hilo$date.1 <- NULL # another date column
hilo$BGARFU <- NULL # ?
hilo$DOmgL <- NULL # dissolved oxygen
hilo$Doper <- NULL # dissolved oxygen
hilo$PAR1 <- NULL # ?
hilo$pH <- NULL # pH
hilo$NTU <- NULL # a different measurement for turbitity
hilo$DOper10 <- NULL # dissolved oxygen
# colnames(hilo) <- c("Date", "cfs", "RiverFlow-cumec", "LogRiverFlow-cumec", "Chlorophyll-RFU", "Salinity-PPT", "Temp-C", "chlorophyll-calibrator", "Turbidity-NTU")
# does not work ???
hilo
ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(ChlRF))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(ChlRF))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(ChlRFU))) +
geom_line()
ggplot(hilo,  aes(x = Index, y = as.numeric(Corr.NTU))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(Corr.NTU))) +
geom_line()
ggplot(hilo,  aes(x = date, y = as.numeric(saltppt))) +
geom_line()
print(RiverFlow + ggtitle(Log River Flow))
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle(Log River Flow))
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("Log River Flow"))
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("Log River Flow")+labs(y="Time", x = "Log River Flow cubic meters per second"))
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("Log River Flow")+labs(x="Time", y = "Log River Flow cubic meters per second"))
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow cubic meters per second"))
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow - cubic meters per second"))
CHL <- ggplot(hilo,  aes(x = date, y = as.numeric(ChlRFU))) +
geom_line()
print(CHL + ggtitle("Chlorophyll ")+labs(x="Time", y = "Chlorophyll  - relative fluorescence units (RFU)"))
TURB <- ggplot(hilo,  aes(x = date, y = as.numeric(Corr.NTU))) +
geom_line()
print(TURB + ggtitle("Turbidity ")+labs(x="Time", y = "Turbidity - Nephelometric Turbidity Units (NTU)"))
SALT <- ggplot(hilo,  aes(x = date, y = as.numeric(saltppt))) +
geom_line()
print(SALT + ggtitle("Salinity")+labs(x="Time", y = "Salinity - unit parts per thousand (PPT)"))
print(SALT + ggtitle("Salinity")+labs(x="Time", y = "Salinity - unit parts per thousand (PPT)")+col(red))
SALT <- ggplot(hilo,  aes(x = date, y = as.numeric(saltppt))) +
geom_line()
print(SALT + ggtitle("Salinity")+labs(x="Time", y = "Salinity - unit parts per thousand (PPT)")
SALT <- ggplot(hilo,  aes(x = date, y = as.numeric(saltppt))) +
geom_line()
print(SALT + ggtitle("Salinity")+labs(x="Time", y = "Salinity - unit parts per thousand (PPT)"))
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()+
geom_point(color='darkblue')
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow - cubic meters per second"))
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow - cubic meters per second"))
is.na(hilo$logcms)
which(is.na(hilo$logcms)==TRUE)
hilo[c(50509 ,50510 ,50511 ,50512 ,50513 ,50514 ,50515, 50516 ,50517, 50518, 50519, 50520),]
which(is.na(hilo$logcms)==TRUE)
hilo[c(50509 ,50510 ,50511 ,50512 ,50513 ,50514 ,50515, 50516 ,50517, 50518, 50519, 50520),]
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow - cubic meters per second"))
hilo[which(is.na(hilo$logcms)==TRUE),]
length(hilo[which(is.na(hilo$logcms)==TRUE),])
hilo[which(is.na(hilo$logcms)==TRUE),] # 9 NAs seems like there are more
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow - cubic meters per second"))
hilo[which(is.na(hilo$ChlRFU)==TRUE),]
length(hilo[which(is.na(hilo$ChlRFU)==TRUE),])
hilo[which(is.na(hilo$ChlRFU)==TRUE),] # 9 NAs
CHL <- ggplot(hilo,  aes(x = date, y = as.numeric(ChlRFU))) +
geom_line()
print(CHL + ggtitle("Chlorophyll ")+labs(x="Time", y = "Chlorophyll  - relative fluorescence units (RFU)"))
hilo[which(is.na(hilo$ChlRFU)==TRUE),] # 9 NAs
CHL <- ggplot(hilo,  aes(x = date, y = as.numeric(ChlRFU))) +
geom_line()
print(CHL + ggtitle("Chlorophyll ")+labs(x="Time", y = "Chlorophyll  - relative fluorescence units (RFU)"))
hilo$ChlRFU[which(is.na(hilo$ChlRFU)==TRUE),] # 9 NAs
hilo$ChlRFU[which(is.na(hilo$ChlRFU)==TRUE)] # 9 NAs
length(hilo$ChlRFU[which(is.na(hilo$ChlRFU)==TRUE)]) # 9 NAs
length(hilo$logcms[which(is.na(hilo$logcms)==TRUE),]) # 9 NAs seems like there are more
length(hilo$logcms[which(is.na(hilo$logcms)==TRUE)]) # 9 NAs seems like there are more
length(hilo$ChlRFU[which(is.na(hilo$ChlRFU)==TRUE)]) # 20464 NAs
CHL <- ggplot(hilo,  aes(x = date, y = as.numeric(ChlRFU))) +
geom_line()
print(CHL + ggtitle("Chlorophyll ")+labs(x="Time", y = "Chlorophyll  - relative fluorescence units (RFU)"))
length(hilo$Corr.NTU[which(is.na(hilo$Corr.NTU)==TRUE)])
length(hilo$Corr.NTU[which(is.na(hilo$Corr.NTU)==TRUE)])
TURB <- ggplot(hilo,  aes(x = date, y = as.numeric(Corr.NTU))) +
geom_line()
print(TURB + ggtitle("Turbidity ")+labs(x="Time", y = "Turbidity - Nephelometric Turbidity Units (NTU)"))
length(hilo$saltppt[which(is.na(hilo$saltppt)==TRUE)])
length(hilo$saltppt[which(is.na(hilo$saltppt)==TRUE)]) #11330 NAs
SALT <- ggplot(hilo,  aes(x = date, y = as.numeric(saltppt))) +
geom_line()
print(SALT + ggtitle("Salinity")+labs(x="Time", y = "Salinity - unit parts per thousand (PPT)"))
hist(hilo$logcms)
hist(as.numeric(hilo$logcms))
?hist
hist(as.numeric(hilo$logcms), main = "Histogram of Log River Flow", xlab = Log River Flow)
hist(as.numeric(hilo$logcms), main = "Histogram of Log River Flow", xlab = "Log River Flow")
hist(as.numeric(hilo$ChlRFU), main = "Histogram of Chlorophyll", xlab = "Chlorophyll  - relative fluorescence units (RFU)")
hist(as.numeric(hilo$Corr.NTU), main = "Histogram of Turbidity", xlab = "Turbidity - Nephelometric Turbidity Units (NTU)")
hist(as.numeric(hilo$saltppt), main = "Histogram of Salinity", xlab = "Salinity - unit parts per thousand (PPT)")
