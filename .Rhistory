# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2(1-pchisq(teststat, df = 1))
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2*(1-pchisq(teststat, df = 1))
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2*(1-pchisq(teststat, df = 1))
pvalue
(20/200)-(25/200)
200*0.025
(25/200)-(20/200)
library(mosaic)
library(MUsaic)
library(DescTools)
library(binom)
library(boot)
library(clp)
library(exactci)
library(PropCIs)
library(XNomial)
library(readxl)
library(PropCIs)
library(epitools)
library(exact2x2)
library(readxl)
Drug_Use <- read_excel("/Users/odalysbar/Documents/MA460-CatStat/Drug Use.xlsx")
tally(~Alcohol|Marijuana, data = Drug_Use)
xchisq.test(~Alcohol|Marijuana, data=Drug_Use, correct = FALSE)
tally(~Alcohol|Marijuana, data = Drug_Use, format = "perc")
# Cigarettes = Yes
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"), margins = TRUE, format = "perc")
# Cigarettes = No
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"), margins = TRUE, format = "perc")
# Cigarettes = Yes
CigYes<-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"))
# Cigarettes = No
CigNo <-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"))
oddsRatio(tally(~Alcohol|Marijuana, data = Drug_Use))
oddsRatio(CigYes)
oddsRatio(CigNo)
frequency <- c(0.16,0.44,0.27,0.13)
observedcounts <- c(36,21,12,19)
xchisq.test(observedcounts, p = frequency, correct = FALSE)
n <-  sum(observedcounts)
xmulti(observedcounts,frequency,statName="Prob",histobins=T, detail=3)
SideEffects <- matrix(c(3,15,6,12),nrow = 2)
rownames(SideEffects) <- c("Yes", "No")
colnames(SideEffects) <- c("Female", "Male")
SideEffects
prop.test(c(3,6),c(18,18), conf.level = 0.95, correct = FALSE)
OR <- ((3/18)/(1-(3/18)))/((6/18)/(1-(6/18)))
OR
oddsratio(SideEffects,method="fisher", correct=FALSE, conf=.95)
xchisq.test(SideEffects, correct = FALSE, simulate.p.value = TRUE)
# test stat = 1.33
2*(1-pchisq(1.33,df=1))
Asthma <- matrix(c(20,25,180,175), nrow = 2, ncol= 2)
row.names(Asthma) <- c("Yes", "No")
colnames(Asthma) <- c("New", "Old")
Asthma
(25/200)-(20/200)
rr <-(20/200)/(25/200)
rr
1/rr
OR <- (20/180)/(25/175)
OR
oddsratio(Asthma,method="wald", correct=FALSE, conf=.95)
table <- matrix(c(40,46,19,6,2,33,44,24,7,5,12,13,14,15,3), nrow=5,ncol=3)
rownames(table) <- c("20-29", "30-39", "40-49","50-59", "60+")
colnames(table) <- c("less", "same", "better")
table
xchisq.test(table, correct = FALSE, simulate.p.value = TRUE)
counts <- c(2,5,3)
expected_freq <- c(0.25,0.5,0.25)
xchisq.test(counts, p=expected_freq, correct = FALSE, simulate.p.value = TRUE)
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2*(1-pchisq(teststat, df = 1))
pvalue
library(mosaic)
library(MUsaic)
library(DescTools)
library(binom)
library(boot)
library(clp)
library(exactci)
library(PropCIs)
library(XNomial)
library(readxl)
library(PropCIs)
library(epitools)
library(exact2x2)
library(readxl)
Drug_Use <- read_excel("/Users/odalysbar/Documents/MA460-CatStat/Drug Use.xlsx")
tally(~Alcohol|Marijuana, data = Drug_Use)
xchisq.test(~Alcohol|Marijuana, data=Drug_Use, correct = FALSE)
tally(~Alcohol|Marijuana, data = Drug_Use, format = "perc")
# Cigarettes = Yes
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"), margins = TRUE, format = "perc")
# Cigarettes = No
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"), margins = TRUE, format = "perc")
# Cigarettes = Yes
CigYes<-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"))
# Cigarettes = No
CigNo <-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"))
oddsRatio(tally(~Alcohol|Marijuana, data = Drug_Use))
oddsRatio(CigYes)
oddsRatio(CigNo)
frequency <- c(0.16,0.44,0.27,0.13)
observedcounts <- c(36,21,12,19)
xchisq.test(observedcounts, p = frequency, correct = FALSE)
n <-  sum(observedcounts)
xmulti(observedcounts,frequency,statName="Prob",histobins=T, detail=3)
SideEffects <- matrix(c(3,15,6,12),nrow = 2)
rownames(SideEffects) <- c("Yes", "No")
colnames(SideEffects) <- c("Female", "Male")
SideEffects
prop.test(c(3,6),c(18,18), conf.level = 0.95, correct = FALSE)
OR <- ((3/18)/(1-(3/18)))/((6/18)/(1-(6/18)))
OR
oddsratio(SideEffects,method="fisher", correct=FALSE, conf=.95)
xchisq.test(SideEffects, correct = FALSE, simulate.p.value = TRUE)
# test stat = 1.33
2*(1-pchisq(1.33,df=1))
Asthma <- matrix(c(20,25,180,175), nrow = 2, ncol= 2)
row.names(Asthma) <- c("Yes", "No")
colnames(Asthma) <- c("New", "Old")
Asthma
(25/200)-(20/200)
rr <-(20/200)/(25/200)
rr
1/rr
OR <- (20/180)/(25/175)
OR
oddsratio(Asthma,method="wald", correct=FALSE, conf=.95)
table <- matrix(c(40,46,19,6,2,33,44,24,7,5,12,13,14,15,3), nrow=5,ncol=3)
rownames(table) <- c("20-29", "30-39", "40-49","50-59", "60+")
colnames(table) <- c("less", "same", "better")
table
xchisq.test(table, correct = FALSE, simulate.p.value = TRUE)
counts <- c(2,5,3)
expected_freq <- c(0.25,0.5,0.25)
xchisq.test(counts, p=expected_freq, correct = FALSE, simulate.p.value = TRUE)
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2*(1-pchisq(teststat, df = 1))
pvalue
library(mosaic)
library(MUsaic)
library(DescTools)
library(binom)
library(boot)
library(clp)
library(exactci)
library(PropCIs)
library(XNomial)
library(readxl)
library(PropCIs)
library(epitools)
library(exact2x2)
library(readxl)
Drug_Use <- read_excel("/Users/odalysbar/Documents/MA460-CatStat/Drug Use.xlsx")
tally(~Alcohol|Marijuana, data = Drug_Use)
xchisq.test(~Alcohol|Marijuana, data=Drug_Use, correct = FALSE)
tally(~Alcohol|Marijuana, data = Drug_Use, format = "perc")
# Cigarettes = Yes
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"), margins = TRUE, format = "perc")
# Cigarettes = No
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"), margins = TRUE, format = "perc")
# Cigarettes = Yes
CigYes<-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"))
# Cigarettes = No
CigNo <-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"))
oddsRatio(tally(~Alcohol|Marijuana, data = Drug_Use))
oddsRatio(CigYes)
oddsRatio(CigNo)
frequency <- c(0.16,0.44,0.27,0.13)
observedcounts <- c(36,21,12,19)
xchisq.test(observedcounts, p = frequency, correct = FALSE)
n <-  sum(observedcounts)
xmulti(observedcounts,frequency,statName="Prob",histobins=T, detail=3)
SideEffects <- matrix(c(3,15,6,12),nrow = 2)
rownames(SideEffects) <- c("Yes", "No")
colnames(SideEffects) <- c("Female", "Male")
SideEffects
prop.test(c(3,6),c(18,18), conf.level = 0.95, correct = FALSE)
OR <- ((3/18)/(1-(3/18)))/((6/18)/(1-(6/18)))
OR
oddsratio(SideEffects,method="fisher", correct=FALSE, conf=.95)
xchisq.test(SideEffects, correct = FALSE, simulate.p.value = TRUE)
# test stat = 1.33
2*(1-pchisq(1.33,df=1))
Asthma <- matrix(c(20,25,180,175), nrow = 2, ncol= 2)
row.names(Asthma) <- c("Yes", "No")
colnames(Asthma) <- c("New", "Old")
Asthma
(25/200)-(20/200)
rr <-(20/200)/(25/200)
rr
1/rr
OR <- (20/180)/(25/175)
OR
oddsratio(Asthma,method="wald", correct=FALSE, conf=.95)
table <- matrix(c(40,46,19,6,2,33,44,24,7,5,12,13,14,15,3), nrow=5,ncol=3)
rownames(table) <- c("20-29", "30-39", "40-49","50-59", "60+")
colnames(table) <- c("less", "same", "better")
table
xchisq.test(table, correct = FALSE, simulate.p.value = TRUE)
counts <- c(2,5,3)
expected_freq <- c(0.25,0.5,0.25)
xchisq.test(counts, p=expected_freq, correct = FALSE, simulate.p.value = TRUE)
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2*(1-pchisq(teststat, df = 1))
pvalue
xmulti(observedcounts,frequency,statName="Prob",histobins=T, detail=3)
table <- matrix(c(40,46,19,6,2,33,44,24,7,5,12,13,14,15,3), nrow=5,ncol=3)
rownames(table) <- c("20-29", "30-39", "40-49","50-59", "60+")
colnames(table) <- c("less", "same", "better")
table
xchisq.test(table, correct = FALSE, simulate.p.value = TRUE)
(113/283)*(85/283)
expF <- (113/283)*(85/283)
total <- 283
expF*n
expF*total
library(mosaic)
library(MUsaic)
library(DescTools)
library(binom)
library(boot)
library(clp)
library(exactci)
library(PropCIs)
library(XNomial)
library(readxl)
library(PropCIs)
library(epitools)
library(exact2x2)
library(readxl)
Drug_Use <- read_excel("/Users/odalysbar/Documents/MA460-CatStat/Drug Use.xlsx")
tally(~Alcohol|Marijuana, data = Drug_Use)
xchisq.test(~Alcohol|Marijuana, data=Drug_Use, correct = FALSE)
tally(~Alcohol|Marijuana, data = Drug_Use, format = "perc")
# Cigarettes = Yes
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"), margins = TRUE, format = "perc")
# Cigarettes = No
tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"), margins = TRUE, format = "perc")
# Cigarettes = Yes
CigYes<-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="Yes"))
# Cigarettes = No
CigNo <-tally(~Alcohol|Marijuana, data=subset(Drug_Use,Cigarettes=="No"))
oddsRatio(tally(~Alcohol|Marijuana, data = Drug_Use))
oddsRatio(CigYes)
oddsRatio(CigNo)
frequency <- c(0.16,0.44,0.27,0.13)
observedcounts <- c(36,21,12,19)
xchisq.test(observedcounts, p = frequency, correct = FALSE)
xmulti(observedcounts,frequency,statName="Prob",histobins=T, detail=3)
SideEffects <- matrix(c(3,15,6,12),nrow = 2)
rownames(SideEffects) <- c("Yes", "No")
colnames(SideEffects) <- c("Female", "Male")
SideEffects
prop.test(c(3,6),c(18,18), conf.level = 0.95, correct = FALSE)
OR <- ((3/18)/(1-(3/18)))/((6/18)/(1-(6/18)))
OR
oddsratio(SideEffects,method="fisher", correct=FALSE, conf=.95)
xchisq.test(SideEffects, correct = FALSE, simulate.p.value = TRUE)
# test stat = 1.33
2*(1-pchisq(1.33,df=1))
Asthma <- matrix(c(20,25,180,175), nrow = 2, ncol= 2)
row.names(Asthma) <- c("Yes", "No")
colnames(Asthma) <- c("New", "Old")
Asthma
(25/200)-(20/200)
rr <-(20/200)/(25/200)
rr
1/rr
OR <- (20/180)/(25/175)
OR
oddsratio(Asthma,method="wald", correct=FALSE, conf=.95)
table <- matrix(c(40,46,19,6,2,33,44,24,7,5,12,13,14,15,3), nrow=5,ncol=3)
rownames(table) <- c("20-29", "30-39", "40-49","50-59", "60+")
colnames(table) <- c("less", "same", "better")
table
xchisq.test(table, correct = FALSE, simulate.p.value = TRUE)
expF <- (113/283)*(85/283)
total <- 283
expF*total
counts <- c(2,5,3)
expected_freq <- c(0.25,0.5,0.25)
xchisq.test(counts, p=expected_freq, correct = FALSE, simulate.p.value = TRUE)
n <- 20
xhat <- 18
pihat <- xhat/n
# LR
# using pihat
L1 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.9)^18)*((1-0.9)^2)
# using pi
L0 <- (factorial(20)/(factorial(18)*factorial(2)))*((0.5)^18)*((1-0.5)^2)
teststat <- 2*log(L1/L0)
teststat
pvalue <- 2*(1-pchisq(teststat, df = 1))
pvalue
data(crabs)
Crabs <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Crabs.dat", header=TRUE)
Crabs
plot(jitter(y, 0.08) ~  width, data=Crabs) # scatterplot of y by x=width
library(gam) # for fitting generalized additive models
install.packages("gam")
#install.packages("gam")
library(gam) # for fitting generalized additive models
#install.packages("gam")
#library(gam) # for fitting generalized additive models
gam.fit <- gam(y ~ s(width), family=binomial, data=Crabs) # s = smooth funct.
plot(jitter(y, 0.08) ~  width, data=Crabs) # scatterplot of y by x=width
#install.packages("gam")
#library(gam) # for fitting generalized additive models
gam.fit <- gam(y ~ s(width), family=binomial, data=Crabs) # s = smooth funct.
curve(predict(gam.fit, data.frame(width=x), type="resp"), add=TRUE) # plots generalized additive model smoothing fit
fit <- glm(y ~ width, family=binomial, data=Crabs) # link=logit is default
curve(predict(fit, data.frame(width=x), type="resp"), add=TRUE) # logistic regression fit is added to the plot
summary(fit)
predict(fit, data.frame(width = 21.0), type="response") # estimated probability of satellite at width = 21.0
predict(fit, data.frame(width = mean(Crabs$width)), type="response") # estimated probability of satellite at mean width
Crabs <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Crabs.dat", header=TRUE)
Crabs
Heart <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Heart.dat",header=TRUE)
Heart # Heart data file at text website, in contingency table form
# the following code fits logistic regression model to the data file
library(dplyr) # to recode explanatory variable
Heart$x <- recode(Heart$snoring, never = 0, occasional = 2, nearly_every_night = 4, every_night = 5)
n <- Heart$yes + Heart$no # binomial sample sizes are the row totals
fit <- glm(yes/n ~ x, family=binomial(link=logit), weights=n, data=Heart)
# canonical link for binomial is logit, so "(link=logit)" not necessary
# "weights" indicates sample proportion yes/n is based on n observations
summary(fit)
# logistic ML estimate of beta is 0.397
fitted(fit) # fitted values (probability estimates) at 4 levels of snoring
library(dplyr) # to recode explanatory variable
Heart$x <- recode(Heart$snoring, never = 0, occasional = 2, nearly_every_night = 4, every_night = 5)
n <- Heart$yes + Heart$no # binomial sample sizes are the row totals
fit <- glm(yes/n ~ x, family=binomial(link=logit), weights=n, data=Heart)
# canonical link for binomial is logit, so "(link=logit)" not necessary
# "weights" indicates sample proportion yes/n is based on n observations
summary(fit)
# logistic ML estimate of beta is 0.397
fitted(fit) # fitted values (probability estimates) at 4 levels of snoring
fit2 <- glm(yes/n ~ x, family=quasi(link=identity, variance="mu(1-mu)"),weights=n, data=Heart)
summary(fit2, dispersion=1)
Evo <- read.table("http://www.stat.ufl.edu/~aa/cat/data/Evolution.dat", header=TRUE)
Evo
n <- Evo$true + Evo$false # binomial sample sizes
fit <- glm(true/n ~ ideology, family=binomial, weights=n, data=Evo)
summary(fit) # logistic regression fit
confint(fit) # profile likelihood CI
Anova(fit) # likelihood-ratio tests for effect parameters in a GLM
library(car)
Anova(fit) # likelihood-ratio tests for effect parameters in a GLM
library(statmod)
fit0 <- glm(true/n ~ 1, family=binomial, weights=n, data=Evo) # null model
glm.scoretest(fit0, Evo$ideology)ˆ2 # squaring a z score statistic
library(statmod)
fit0 <- glm(true/n ~ 1, family=binomial, weights=n, data=Evo) # null model
glm.scoretest(fit0, Evo$ideology)ˆ2 # squaring a z score statistic
# VERY skewed
hist(as.numeric(hilo$Corr.NTU), main = "Histogram of Turbidity", xlab = "Turbidity - Nephelometric Turbidity Units (NTU)")
hilo <- hbb_wku_h_xts
# read data
#test<-read.csv("drop_na_test.csv")
wku_ts <- read.csv("wailuku_2010_master.csv") #15 min WKU with some lower frequency at storms
setwd("~/")
# Libraries
library(ggplot2)
# Libraries
library(ggplot2)
library(dplyr)
library(scales)
library(Amelia)
library(lubridate)
library(xts)
library(openair)
library(tidyr)
library(gganimate)
# read data
#test<-read.csv("drop_na_test.csv")
wku_ts <- read.csv("wailuku_2010_master.csv") #15 min WKU with some lower frequency at storms
setwd("~/")
setwd("~/Documents/MA321-SP21/HiloBay-Adolf/HiloBay_MA321_Spring21")
# read data
#test<-read.csv("drop_na_test.csv")
wku_ts <- read.csv("wailuku_2010_master.csv") #15 min WKU with some lower frequency at storms
hbb_ts <- read.csv("MASTER_DATASHEET_HBB_text_new.csv") #15 minute data, 2010 - 2016
hbb_ts$saltppt <-as.numeric(hbb_ts$saltppt) #not sure why but saltppt comes through as character, so i convert to numeric here
#convert date column to R dates
hbb_ts$date<-parse_date_time(hbb_ts$date, orders = "mdyHM")
wku_ts$date<-parse_date_time(wku_ts$date, orders = "mdyHM")
#change the frequency of hbb_ts to hourly, save in new data frames. but currently this only averages the time column?!??!
hbb_ts_h<-timeAverage(hbb_ts, avg.time = "hour", statistic = "mean")
wku_ts_h<-timeAverage(wku_ts, avg.time = "hour", statistic = "mean")
#merge hourly time series on a common time index. Since wku is longer time series, right join hbb to wku?
#first make xts objects from hourly data
hbb_h_xts<-xts(hbb_ts_h, order.by = hbb_ts_h$date) #this generates an xts object using new column 'date' date as index
wku_h_xts<-xts(wku_ts_h, order.by = wku_ts_h$date) #this generates an xts object using new column 'date' date as index
hbb_wku_h_xts<-merge(wku_h_xts, hbb_h_xts, join = "left", fill =NA)
hilo <- hbb_wku_h_xts
hilo <- data.frame(date=index(hilo), coredata(hilo))
hilo <- hilo[529:54816,]
hilo
# which(hilo$date=="2010-10-23 00:00:00") = index 529
# which(hilo$date=="2016-12-31 23:00:00") = index 54816
length(hilo[,1]) # we are left with 54288 lines of data
54816 - length(hilo[,1]) # we lost 528 values
# removing columns that we are not using
hilo$date.2 <- NULL # another date column
hilo$date.1 <- NULL # another date column
hilo$BGARFU <- NULL # ?
hilo$DOmgL <- NULL # dissolved oxygen
hilo$Doper <- NULL # dissolved oxygen
hilo$PAR1 <- NULL # ?
hilo$pH <- NULL # pH
hilo$NTU <- NULL # a different measurement for turbitity
hilo$DOper10 <- NULL # dissolved oxygen
# colnames(hilo) <- c("Date", "cfs", "RiverFlow-cumec", "LogRiverFlow-cumec", "Chlorophyll-RFU", "Salinity-PPT", "Temp-C", "chlorophyll-calibrator", "Turbidity-NTU")
# does not work ???
hilo
length(hilo$logcms[which(is.na(hilo$logcms)==TRUE)]) # 12 NAs
RiverFlow <- ggplot(hilo,  aes(x = date, y = as.numeric(logcms))) +
geom_line()
print(RiverFlow + ggtitle("River Flow")+labs(x="Time", y = "Log River Flow - cubic meters per second"))
length(hilo$ChlRFU[which(is.na(hilo$ChlRFU)==TRUE)]) # 20464 NAs
CHL <- ggplot(hilo,  aes(x = date, y = as.numeric(ChlRFU))) +
geom_line()
print(CHL + ggtitle("Chlorophyll ")+labs(x="Time", y = "Chlorophyll  - relative fluorescence units (RFU)"))
length(hilo$Corr.NTU[which(is.na(hilo$Corr.NTU)==TRUE)]) #15012 NAs
TURB <- ggplot(hilo,  aes(x = date, y = as.numeric(Corr.NTU))) +
geom_line()
print(TURB + ggtitle("Turbidity ")+labs(x="Time", y = "Turbidity - Nephelometric Turbidity Units (NTU)"))
length(hilo$saltppt[which(is.na(hilo$saltppt)==TRUE)]) #11330 NAs
SALT <- ggplot(hilo,  aes(x = date, y = as.numeric(saltppt))) +
geom_line()
print(SALT + ggtitle("Salinity")+labs(x="Time", y = "Salinity - unit parts per thousand (PPT)"))
hist(as.numeric(hilo$logcms), main = "Histogram of Log River Flow", xlab = "Log River Flow")
# this looks okay
# VERY skewed
hist(as.numeric(hilo$ChlRFU), main = "Histogram of Chlorophyll", xlab = "Chlorophyll  - relative fluorescence units (RFU)")
# this looks better
hist(log(as.numeric(hilo$ChlRFU)), main = "Histogram of Log Chlorophyll", xlab = "Chlorophyll")
# not sure what happens to units when taking the log
# VERY skewed
hist(as.numeric(hilo$Corr.NTU), main = "Histogram of Turbidity", xlab = "Turbidity - Nephelometric Turbidity Units (NTU)")
# this looks better
hist(log(as.numeric(hilo$Corr.NTU)), main = "Histogram of Log Turbidity", xlab = "Turbidity")
# not sure what happens to units when taking the log
# skewed
hist(as.numeric(hilo$saltppt), main = "Histogram of Salinity", xlab = "Salinity - unit parts per thousand (PPT)")
# this is worst!
hist(log(as.numeric(hilo$saltppt)), main = "Histogram of Log Salinity", xlab = "Salinity")
# not sure what happens to units when taking the log
